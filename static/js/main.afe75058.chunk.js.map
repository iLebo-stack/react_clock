{"version":3,"sources":["Components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","toLocaleTimeString","timerId","setInterval","this","setState","prevProps","name","props","console","log","clearInterval","React","Component","App","isClockVisible","clockName","generateRandomNumber","Math","round","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,QAAwBC,aAAY,eALtC,uDAOE,WAAqB,IAAD,OAClBC,KAAKF,QAAUC,aACb,kBAAM,EAAKE,SAAS,CAClBN,MAAM,IAAIC,MAAOC,yBAEnB,OAZN,gCAgBE,SAAmBK,GACbA,EAAUC,OAASH,KAAKI,MAAMD,MAEhCE,QAAQC,IAAR,qCACgCJ,EAAUC,KAD1C,eACqDH,KAAKI,MAAMD,SApBtE,kCAyBE,WACEI,cAAcP,KAAKF,WA1BvB,oBA6BE,WACE,IAAQH,EAASK,KAAKN,MAAdC,KAKR,OAFAU,QAAQC,IAAIX,GAGV,oBAAG,UAAQ,OAAX,0BAEG,IACAA,SAvCT,GAA2Ba,IAAMC,WCD3BC,E,4MACJhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAW,G,EAGbC,qBAAuB,kBAAM,EAAKZ,SAAS,CACzCW,UAAWE,KAAKC,MAAsB,GAAhBD,KAAKE,a,4CAG7B,WAAU,IAAD,OACP,EAAsChB,KAAKN,MAAnCiB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,sBAAKK,UAAU,MAAf,UACE,6CAEA,iDAAkBL,KAElB,sBAAKK,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAM,EAAKlB,SAAS,CAAEU,gBAAgB,KAFjD,kBAOA,wBACEO,KAAK,SACLC,QAAS,kBAAM,EAAKlB,SAAS,CAAEU,gBAAgB,KAFjD,kBAOA,wBACEO,KAAK,SACLC,QAAS,kBAAM,EAAKN,wBAFtB,gCAQDF,GAAkB,cAAC,EAAD,CAAOR,KAAMS,W,GA1CtBJ,IAAMC,WAgDTC,ICtDfU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.afe75058.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  date: string;\n}\n\ninterface Props {\n  name: number;\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date().toLocaleTimeString(),\n  };\n\n  timerId: NodeJS.Timer = setInterval(() => {});\n\n  componentDidMount() {\n    this.timerId = setInterval(\n      () => this.setState({\n        date: new Date().toLocaleTimeString(),\n      }),\n      1000,\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(\n        `The Clock was renamed from ${prevProps.name} to ${this.props.name}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    // eslint-disable-next-line\n    console.log(date);\n\n    return (\n      <p data-cy=\"time\">\n        Current time:\n        {' '}\n        {date}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Components/Clock/Clock';\n\ninterface State {\n  isClockVisible: boolean;\n  clockName: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  generateRandomNumber = () => this.setState({\n    clockName: Math.round(Math.random() * 10),\n  });\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        <p>{`Clockname: ${clockName}`}</p>\n\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={() => this.setState({ isClockVisible: true })}\n          >\n            Show\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.setState({ isClockVisible: false })}\n          >\n            Hide\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.generateRandomNumber()}\n          >\n            Set random name\n          </button>\n        </div>\n\n        {isClockVisible && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}